# PC構成リスト - 環境変数設定例
# 外部API連携用設定（段階的実装）

# ===========================================
# 🛡️ 安全性設定
# ===========================================

# アプリケーション環境
NODE_ENV=development
VITE_APP_ENV=development

# データ更新設定
VITE_UPDATE_MODE=mock
VITE_DRY_RUN=true
VITE_VERBOSE_LOGGING=true

# ===========================================
# 🌐 外部API設定（慎重な段階実装）
# ===========================================

# 価格.com API（実装予定）
# VITE_KAKAKU_API_URL=https://api.kakaku.com/v1
# VITE_KAKAKU_API_KEY=your_kakaku_api_key_here

# Amazon PA-API（実装予定）
# VITE_AMAZON_API_URL=https://webservices.amazon.com/paapi5
# VITE_AMAZON_ACCESS_KEY=your_amazon_access_key
# VITE_AMAZON_SECRET_KEY=your_amazon_secret_key
# VITE_AMAZON_ASSOCIATE_TAG=your_associate_tag

# 楽天API（実装予定）
# VITE_RAKUTEN_API_URL=https://app.rakuten.co.jp/services/api
# VITE_RAKUTEN_APPLICATION_ID=your_rakuten_app_id

# ===========================================
# 🤖 BOT対策・レート制限設定
# ===========================================

# レート制限
VITE_RATE_LIMIT_PER_MINUTE=30
VITE_RATE_LIMIT_PER_HOUR=300
VITE_BURST_LIMIT=5

# リクエスト間隔（ミリ秒）
VITE_REQUEST_DELAY=2000
VITE_BURST_DELAY=10000

# User-Agent設定
VITE_USER_AGENT="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"

# ===========================================
# 📊 GitHub Actions設定
# ===========================================

# GitHub Secrets で設定する項目:
# - KAKAKU_API_KEY
# - AMAZON_ACCESS_KEY
# - AMAZON_SECRET_KEY
# - RAKUTEN_APPLICATION_ID

# ===========================================
# 🔍 開発・デバッグ設定
# ===========================================

# ログレベル
VITE_LOG_LEVEL=info

# デバッグモード
VITE_DEBUG_MODE=false

# モック設定
VITE_USE_MOCK_DATA=true
VITE_MOCK_DELAY=100

# ===========================================
# ⚠️ 重要な注意事項
# ===========================================

# 1. 本ファイルは.gitignoreに追加して、実際のAPIキーは含めないこと
# 2. 外部API利用時は各サービスの利用規約を必ず確認すること
# 3. レート制限を遵守し、サーバーに負荷をかけないこと
# 4. BOT扱いされないよう、適切なUser-Agentと間隔を設定すること
# 5. robots.txtを確認し、アクセス許可を得てからスクレイピングすること

# ===========================================
# 📋 段階的実装計画
# ===========================================

# Phase 1: モック実装（現在）✅
# - 安全なローカルテスト
# - レート制限機構の準備
# - エラーハンドリングの実装

# Phase 2: 制限付き外部アクセス（次段階）
# - 1つのAPIから少数データ取得
# - 深夜時間帯限定実行
# - 手動監視下での動作確認

# Phase 3: 本格外部アクセス（最終段階）
# - 複数API統合
# - 自動スケジュール実行
# - 本格運用開始
