# PC構成リスト - 環境変数設定例
# 外部API連携用設定（Phase 2完全版）

# ===========================================
# 🛡️ 安全性設定
# ===========================================

# アプリケーション環境
NODE_ENV=development
VITE_APP_ENV=development

# データ更新設定
VITE_UPDATE_MODE=mock
VITE_DRY_RUN=true
VITE_VERBOSE_LOGGING=true

# ===========================================
# 🌐 外部API設定（Phase 2統合版）
# ===========================================

# 価格.com API（慎重実装予定）
# VITE_KAKAKU_API_URL=https://api.kakaku.com/v1
# VITE_KAKAKU_API_KEY=your_kakaku_api_key_here

# Amazon PA-API（実装準備完了）
# VITE_AMAZON_API_URL=https://webservices.amazon.co.jp/paapi5
# VITE_AMAZON_ACCESS_KEY=your_amazon_access_key
# VITE_AMAZON_SECRET_KEY=your_amazon_secret_key
# VITE_AMAZON_ASSOCIATE_TAG=your_associate_tag
# VITE_AMAZON_PARTNER_TYPE=Associates
# VITE_AMAZON_MARKETPLACE=www.amazon.co.jp

# 楽天API（実装準備完了）
# VITE_RAKUTEN_API_URL=https://app.rakuten.co.jp/services/api
# VITE_RAKUTEN_APPLICATION_ID=your_rakuten_app_id
# VITE_RAKUTEN_AFFILIATE_ID=your_affiliate_id

# ヨドバシ.com（スクレイピング・将来実装）
# VITE_YODOBASHI_BASE_URL=https://www.yodobashi.com
# VITE_YODOBASHI_ENABLED=false

# ===========================================
# 🤖 BOT対策・セキュリティ強化（Phase 2）
# ===========================================

# レート制限（ソース別）
VITE_RATE_LIMIT_PER_MINUTE=30
VITE_RATE_LIMIT_PER_HOUR=300
VITE_BURST_LIMIT=5

# Amazon専用レート制限
VITE_AMAZON_RATE_LIMIT_PER_MINUTE=8
VITE_AMAZON_RATE_LIMIT_PER_HOUR=100

# 楽天専用レート制限
VITE_RAKUTEN_RATE_LIMIT_PER_MINUTE=15
VITE_RAKUTEN_RATE_LIMIT_PER_HOUR=300

# 価格.com専用レート制限（慎重）
VITE_KAKAKU_RATE_LIMIT_PER_MINUTE=20
VITE_KAKAKU_RATE_LIMIT_PER_HOUR=200

# リクエスト間隔（ミリ秒）
VITE_REQUEST_DELAY=2000
VITE_BURST_DELAY=10000
VITE_RANDOM_DELAY_MIN=500
VITE_RANDOM_DELAY_MAX=2000

# User-Agent設定
VITE_USER_AGENT="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
VITE_ACCEPT_LANGUAGE="ja-JP,ja;q=0.9,en;q=0.8"

# セキュリティ設定
VITE_SECURITY_ENABLED=true
VITE_RESPECT_ROBOTS_TXT=true
VITE_SESSION_ROTATION_INTERVAL=3600000
VITE_MAX_CONSECUTIVE_ERRORS=5
VITE_ERROR_COOLDOWN=300000

# ===========================================
# 📊 価格サービス設定（Phase 2）
# ===========================================

# 価格取得設定
VITE_PRICE_CACHE_DURATION=300000
VITE_PRICE_VARIATION_THRESHOLD=0.3
VITE_PRICE_UPDATE_INTERVAL=3600000

# 価格履歴設定
VITE_PRICE_HISTORY_RETENTION=30
VITE_PRICE_CONFIDENCE_THRESHOLD=0.8

# ===========================================
# 📦 在庫サービス設定（Phase 2）
# ===========================================

# 在庫監視設定
VITE_STOCK_MONITORING_ENABLED=true
VITE_STOCK_CHECK_INTERVAL=1800000
VITE_STOCK_CACHE_DURATION=300000
VITE_LOW_STOCK_THRESHOLD=5

# 在庫アラート設定
VITE_ALERT_ON_RESTOCK=true
VITE_ALERT_ON_OUT_OF_STOCK=true
VITE_STOCK_CONFIDENCE_THRESHOLD=0.7

# ===========================================
# 🆕 新製品サービス設定（Phase 2）
# ===========================================

# 新製品検索設定
VITE_NEW_PRODUCT_MONITORING_ENABLED=true
VITE_NEW_PRODUCT_CHECK_INTERVAL=21600000
VITE_NEW_PRODUCT_CACHE_DURATION=3600000
VITE_NEW_PRODUCT_LIMIT_PER_CATEGORY=20

# トレンド分析設定
VITE_TREND_ANALYSIS_ENABLED=true
VITE_POPULARITY_THRESHOLD=70
VITE_TREND_SCORE_THRESHOLD=80

# ===========================================
# 🕐 時間制限設定（Phase 2）
# ===========================================

# 外部アクセス許可時間（UTC）
VITE_ALLOWED_HOURS="2,3,4,5"
VITE_WEEKEND_ONLY=false
VITE_HOLIDAY_CHECK=true

# 開発・テスト時間制限
VITE_DEV_TIME_RESTRICTIONS=false
VITE_TEST_TIME_RESTRICTIONS=true

# ===========================================
# 📊 GitHub Actions設定（Phase 2対応）
# ===========================================

# GitHub Secrets で設定する項目:
# 価格・在庫・新製品サービス用
# - KAKAKU_API_KEY
# - AMAZON_ACCESS_KEY
# - AMAZON_SECRET_KEY
# - AMAZON_ASSOCIATE_TAG
# - RAKUTEN_APPLICATION_ID
# - RAKUTEN_AFFILIATE_ID

# セキュリティ・監査用
# - SECURITY_AUDIT_WEBHOOK
# - ERROR_NOTIFICATION_WEBHOOK

# ===========================================
# 🔍 開発・デバッグ設定（Phase 2拡張）
# ===========================================

# ログレベル
VITE_LOG_LEVEL=info

# デバッグモード
VITE_DEBUG_MODE=false
VITE_DEBUG_PRICE_SERVICE=false
VITE_DEBUG_STOCK_SERVICE=false
VITE_DEBUG_NEW_PRODUCT_SERVICE=false
VITE_DEBUG_SECURITY_SERVICE=false

# モック設定
VITE_USE_MOCK_DATA=true
VITE_MOCK_DELAY=100
VITE_MOCK_PRICE_VARIATION=0.1
VITE_MOCK_STOCK_VARIATION=true

# パフォーマンス設定
VITE_BATCH_SIZE=3
VITE_CONCURRENT_REQUESTS=2
VITE_TIMEOUT_MS=15000
VITE_RETRY_COUNT=3
VITE_RETRY_DELAY=5000

# ===========================================
# 📊 監視・メトリクス設定（Phase 2新機能）
# ===========================================

# メトリクス収集
VITE_METRICS_ENABLED=true
VITE_TRACK_REQUEST_COUNT=true
VITE_TRACK_RESPONSE_TIME=true
VITE_TRACK_ERROR_RATE=true
VITE_TRACK_RATE_LIMIT_HITS=true

# アラート設定
VITE_HIGH_ERROR_RATE_THRESHOLD=0.1
VITE_SLOW_RESPONSE_THRESHOLD=5000
VITE_RATE_LIMIT_WARNING_THRESHOLD=0.8

# 監査ログ設定
VITE_AUDIT_LOG_ENABLED=true
VITE_AUDIT_LOG_RETENTION=1000
VITE_INCLUDE_REQUEST_DETAILS=false
VITE_INCLUDE_RESPONSE_DATA=false

# ===========================================
# ⚠️ Phase 2重要な注意事項
# ===========================================

# 1. 新しいサービス群はセキュリティを最優先に設計
# 2. 各APIの利用規約とrobots.txtを必ず確認
# 3. レート制限とBOT対策を厳格に遵守
# 4. 段階的実装でリスクを最小化
# 5. 監視・アラート機能でシステム健全性を維持
# 6. エラー発生時は即座に外部アクセスを停止
# 7. 価格・在庫・新製品データの品質管理を徹底

# ===========================================
# 📋 Phase 2実装完了項目
# ===========================================

# ✅ 価格取得エンジン（PriceService）
# ✅ 在庫監視システム（StockService）
# ✅ 新製品自動検出（NewProductService）
# ✅ APIセキュリティ強化（ApiSecurity）
# ✅ 統合API設定（apiConfig）
# ✅ ExternalApiService統合版
# 🚧 React Hook統合（次のステップ）
# 🚧 型定義更新（次のステップ）
# 🚧 テスト・デプロイ（最終ステップ）
